@using Gm.UI.HtmlExtenssions
@model Gm.UI.Models.Utilisateurs.RegisterModel
 @{
     var emailExiste = Html.ViewData.ModelState.FirstOrDefault(x => x.Key == "EmailAddresse");
     var identifiantExiste = Html.ViewData.ModelState.FirstOrDefault(x => x.Key == "Identifiant");
 }
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    if (emailExiste.Value!= null ||
        identifiantExiste.Value!=null)
    {
        <div class="alert alert-warning">
            <p>
                @if (emailExiste.Value != null)
                {
                    @emailExiste.Value.Errors[0].ErrorMessage
                     
                }
                @if (identifiantExiste.Value != null)
                {
                    <br />
                    @identifiantExiste.Value.Errors[0].ErrorMessage
                }
               
            </p>
        </div>
    }
    @*<h2>Informations<small> d'authentification</small>
    </h2>*@
   
    <div>
        @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9" style="margin-bottom: 5px;">
           
            @Html.Custom_DropdownList("RoleId",ViewData["RoleId"]as SelectList, htmlAttributes:new{@style="width: 280px;height: 35px"})
            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
        </div>
    </div>
   
    <div>
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

  
        <div>
            @Html.LabelFor(model => model.Pseudo, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Pseudo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pseudo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
     
        <div>
            @Html.LabelFor(model => model.ConfirmerPassword, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.ConfirmerPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmerPassword, "", new { @class = "text-danger" })
            </div>
        </div>
   <br />
    <div style="margin-top: 10px">
        @*<h2>
            Informations<small> personnel</small>
        </h2>*@
    </div>
    <hr />
         <div>
            @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
            </div>
        </div>
  
        <div>
            @Html.LabelFor(model => model.Prenom, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Prenom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Prenom, "", new { @class = "text-danger" })
            </div>
        </div>
   
    <div>
        @Html.LabelFor(model => model.Sexe, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9" style="margin-bottom: 5px;">
            @Html.Custom_DropdownList("Sexe", ViewData["Sexe"] as SelectList, htmlAttributes: new { @style = "width: 280px;height: 35px" })
            @Html.ValidationMessageFor(model => model.Sexe, "", new { @class = "text-danger" })
        </div>

    </div>
  <br />
        <div >
            @Html.LabelFor(model => model.DateNaissance, htmlAttributes: new { @class = "control-label col-md-3"})
            <div class="col-md-9" style="margin-bottom: 5px">
                @Html.DatePickerDropDowns(Html.FieldNameFor(x => x.DateOfBirthDay),
                                    Html.FieldNameFor(x => x.DateOfBirthMonth),
                                    Html.FieldNameFor(x => x.DateOfBirthYear),
                                    DateTime.Now.Year - 110,
                                    DateTime.Now.Year,
                                    Model.DateOfBirthDay,
                                    Model.DateOfBirthMonth,
                                    Model.DateOfBirthYear)
                @Html.ValidationMessageFor(model => model.DateOfBirthDay, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.DateOfBirthMonth, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.DateOfBirthYear, "", new { @class = "text-danger" })
                
            </div>
        </div>
    
    <div>
        @Html.LabelFor(model => model.Tel, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
        </div>
    </div>
    <div>
        @Html.LabelFor(model => model.Wilaya, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9" style="margin-bottom: 5px;">
            @Html.Custom_DropdownList("Wilaya", ViewData["Wilaya"] as SelectList, htmlAttributes: new { @style = "width: 280px;height: 35px" })

            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
        </div>

    </div>
    <div>
        @Html.LabelFor(model => model.Addresse, htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-9" style="margin-bottom: 10px">
            @Html.TextAreaFor(model => model.Addresse, 3, 55, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Addresse, "", new { @class = "text-danger" })
        </div>
    </div>
   
    
    <hr/>
        <div style="margin-top: 10px">
            <div class="col-md-offset-3 col-md-9">
                <input type="submit" value="Inscrivez vous" class="btn btn-primary" />
            </div>
    </div>
}


<script>
    $(document).ready(function () {
        //$('#RoleId').select2();
        //$('#Sexe').select2();
        $('#DateOfBirthMonth').select2();
        $('#DateOfBirthDay').select2();
        $('#DateOfBirthYear').select2();
        $('#Wilaya').select2();
        
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


