@model GM.Core.Models.Specialite


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="navbar">
            <nav class="navbar-inner   navbar-fixed-top  " style="top: 40px; margin-bottom: 90px">
                <div>
                    <div class="nav-collapse">
                        <ul class="nav">
                            <li><button id="save-btn" style="margin-right: 2px" class="btn btn-success navbar-btn"><i class=" icon-ok"></i> Enregister et Continuer</button></li>
                            <li><button id="update-btn" style="margin-right: 2px" class="btn btn-default navbar-btn"><i class=" icon-lock"></i> Enregistrer et fermer</button></li>
                            <li><button id="delete-btn" style="margin-right: 2px" class="btn btn-default  navbar-btn"><i class=" icon-arrow-left"></i> Femer</button></li>
                            </ul>
                    </div>
                </div>
            </nav>
        </div>
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       @if (Request.RawUrl.Contains("Update"))
       {
            @Html.HiddenFor(model => model.Id)
       }
        
        <div class="control-group">
            @Html.LabelFor(model => model.Libelle, htmlAttributes: new { @class = "control-label"})
            <div class="controls">
                @Html.EditorFor(model => model.Libelle, new { htmlAttributes = new { @class = "validate[required] ", @style = "text-transform: uppercase;" } })
                @Html.ValidationMessageFor(model => model.Libelle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label"})
            <div class="controls">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "validate[required]" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

      
    </div>
}


<script type="text/javascript">
    $(document).ready(function () {
        $("#Libelle").addClass("validate[required]");
        $("#Code").addClass("validate[required]");
        $('form').validationEngine();
        
        $(".menu *").prop('disabled', true);
        $("#delete-btn").click(function(e) {
            e.preventDefault();
            window.location.href = '@Url.Action("Index","Specialite", new {area="Gestion"})';

        });
        $("#save-btn").click(function (e) {
            if ($('form').validationEngine('validate')) {
                e.preventDefault();
               $.ajax({
                   url: '@Url.Action("Create", "Specialite" , new {area ="Gestion"})',
                   data: $("form").serialize(),
                   type: 'POST',
                   success: function (data) {
                       $('#alert').html(data.message);
                       $("#alert").fadeIn('slow').delay(1500).hide(0);
                       $('#Libelle').val("");
                       $('#Code').val("");
                   },
                   error: function () {
                   }
               });
           } else {
               e.preventDefault();
           }
           
        });
        
        
    });
</script>



