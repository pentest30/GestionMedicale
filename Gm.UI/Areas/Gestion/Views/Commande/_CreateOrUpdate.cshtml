@using Gm.UI.HtmlExtenssions
@model GM.Core.Models.Commande

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Request.RawUrl.Contains("Update"))
        {
            @Html.HiddenFor(model => model.Id)
        }
        @Html.HiddenFor(model => model.ClientId)

      @if (User.IsInRole("pharmacien"))
      {
        <div class="control-group">
            @Html.LabelFor(model => model.FournisseurId, htmlAttributes: new { @class = "control-label" })
            <div class="controls">
                @Html.Custom_DropdownList("FournisseurId", ViewData["fournisseur"] as SelectList, htmlAttributes: new { @style = "width: 280px;height: 35px" })
                @Html.ValidationMessageFor(model => model.FournisseurId, "", new { @class = "text-danger" })
            </div>
        </div>
      }

        

        <div class="control-group">
            @Html.LabelFor(model => model.NumPiece, htmlAttributes: new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.NumPiece, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumPiece, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

      
        <div class="control-group">
            @Html.LabelFor(model => model.Validation, htmlAttributes: new { @class = "control-label" })
            <div class="controls">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Validation)
                    @Html.ValidationMessageFor(model => model.Validation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Delivrance, htmlAttributes: new { @class = "control-label" })
            <div class="controls">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Delivrance)
                    @Html.ValidationMessageFor(model => model.Delivrance, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="control-group">
            <div class="col-md-offset-2 controls">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

