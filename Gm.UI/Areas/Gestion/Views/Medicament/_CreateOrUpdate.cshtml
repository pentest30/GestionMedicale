@using Gm.UI.HtmlExtenssions
@model Gm.UI.Areas.Gestion.Models.MedicamentModel
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" >
        
           
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Request.RawUrl.Contains("Update"))
        {
            @Html.HiddenFor(model => model.Id)
        }
        <input type="hidden" id="continuer" name="continuer" />
        <div class="control-group">
            @Html.LabelFor(model => model.SpecialiteId, htmlAttributes: new { @class = "control-label" })
            <div class="controls">
                @Html.Custom_DropdownList("SpecialiteId", ViewData["specialites"] as SelectList, htmlAttributes: new { @style = "width: 280px;height: 35px" })
                @Html.ValidationMessageFor(model => model.SpecialiteId, "", new { @class = "text-danger", })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.DciId, htmlAttributes: new { @class = "control-label" })
            <div class="controls">
                @Html.Custom_DropdownList("DciId", ViewData["dcis"] as SelectList, htmlAttributes: new { @style = "width: 280px;height: 35px" })
                @Html.ValidationMessageFor(model => model.DciId, "", new { @class = "text-danger", @style = "text-transform: uppercase;" })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.FormeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="controls">
               @Html.Custom_DropdownList("FormeId", ViewData["formes"] as SelectList, htmlAttributes: new { @style = "width: 280px;height: 35px" })
                @Html.ValidationMessageFor(model => model.FormeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.ConditionnementId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="controls">
             @Html.Custom_DropdownList("ConditionnementId", ViewData["conditionnements"] as SelectList, htmlAttributes: new { @style = "width: 280px;height: 35px" })
                @Html.ValidationMessageFor(model => model.ConditionnementId, "", new { @class = "text-danger" })
            </div>
        </div>

      
            <div class="control-group">
                @Html.LabelFor(model => model.NomCommerciale, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="controls">
                    @Html.EditorFor(model => model.NomCommerciale, new { htmlAttributes = new { @class = "form-control" ,@style = "text-transform: uppercase;" } })
                    @Html.ValidationMessageFor(model => model.NomCommerciale, "", new { @class = "text-danger" })
                    
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="controls">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase;" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.NumEnregistrement, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="controls">
                    @Html.EditorFor(model => model.NumEnregistrement, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase;" } })
                    @Html.ValidationMessageFor(model => model.NumEnregistrement, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.Dose, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="controls">
                    @Html.EditorFor(model => model.Dose, new { htmlAttributes = new { @class = "form-control", @style = "text-transform: uppercase;" } })
                    @Html.ValidationMessageFor(model => model.Dose, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.Remboursable, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="controls">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Remboursable)
                        @Html.ValidationMessageFor(model => model.Remboursable, "", new { @class = "text-danger", @style = "text-transform: uppercase;" })
                    </div>
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.LaboratoireId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="controls">
                    @Html.Custom_DropdownList("LaboratoireId", ViewData["fabriquants"] as SelectList, htmlAttributes: new { @style = "width: 280px;height: 35px" })
                    @Html.ValidationMessageFor(model => model.LaboratoireId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="control-group">
                @Html.LabelFor(model => model.Tva, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="controls" style="max-width: 280px">
                    @Html.EditorFor(model => model.Tva, new { htmlAttributes = new { @class = "form-control", @style = "max-width:200px" } })
                    @Html.ValidationMessageFor(model => model.Tva, "", new { @class = "text-danger" })
                </div>
            </div>
        <div class="control-group">
            @Html.LabelFor(model => model.Discription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="controls">
                @Html.TextAreaFor(model => model.Discription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discription, "", new { @class = "text-danger" })
            </div>
        </div>

          
        </div>
}


<script>
    $(document).ready(function() {
        $("#SpecialiteId").select2();
        $("#Discription").kendoEditor({ resizable: true });
        $("#DciId").select2();
        $("#FormeId").select2();
        $("#ConditionnementId").select2();
        $("#LaboratoireId").select2();
        $("#save-btn").click(function () {
           
            $("#continuer").val(true);
            $('form').submit();
        });

    });
</script>