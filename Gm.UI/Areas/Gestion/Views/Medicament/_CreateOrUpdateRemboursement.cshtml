@model GM.Core.Models.Remboursement
@{
    if (ViewData["id"] != null) { Model.MedicamentId = Convert.ToInt32(ViewData["id"]); }
}

@using (Html.BeginForm("CreateRemboussement", "Medicament", FormMethod.Post, new { id = "rembourse-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.MedicamentId)
        <div class="control-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="controls">
                <input type="text" name="Date" id="Date">
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="control-group">
            @Html.LabelFor(model => model.TarifReference, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="controls">
                @Html.EditorFor(model => model.TarifReference, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TarifReference, "", new { @class = "text-danger" })
            </div>
        </div>


    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        $("#Date").addClass("validate[required]");
        $("#TarifReference").addClass("validate[required]");
        $('#Date').datepicker({
            format: 'dd/mm/yyyy'
        });
        $('#rembourse-form').validationEngine();

    });

</script>
